diff --git a/dist/shared/nuxt.CrJjphBv.mjs b/dist/shared/nuxt.CrJjphBv.mjs
index 241388585e3da3adf3f4f8adaef0b5f4a611b535..52ff95495452c0b8a9da6ae78031a9c5b06c6a03 100644
--- a/dist/shared/nuxt.CrJjphBv.mjs
+++ b/dist/shared/nuxt.CrJjphBv.mjs
@@ -4955,11 +4955,19 @@ const keyDependencies = [
 ];
 let warnedAboutCompatDate = false;
 async function initNuxt(nuxt) {
-  for (const config of nuxt.options._layers.map((layer) => layer.config).reverse()) {
+  const layerConfigs = nuxt.options._layers.map((layer) => layer.config);
+  const reversedConfigs = layerConfigs.slice().reverse();
+
+  // Register user hooks
+  for (const config of reversedConfigs) {
     if (config.hooks) {
-      nuxt.hooks.addHooks(config.hooks);
+      nuxt.hooks.addHooks(config.hooks)
     }
   }
+
+  // Correct css order
+  nuxt.options.css = reversedConfigs.flatMap(config => config.css || [])
+
   nuxt.options.compatibilityDate = resolveCompatibilityDatesFromEnv(nuxt.options.compatibilityDate);
   if (!nuxt.options.compatibilityDate.default) {
     const todaysDate = formatDate(/* @__PURE__ */ new Date());
@@ -5720,7 +5728,7 @@ type Decorate<T extends Record<string, any>> = { [K in keyof T as K extends stri
 
 type InjectionType<A extends Plugin> = A extends {default: Plugin<infer T>} ? Decorate<T> : unknown
 
-type NuxtAppInjections = 
+type NuxtAppInjections =
   ${tsImports.map((p) => `InjectionType<typeof ${genDynamicImport(p, { wrapper: false })}>`).join(" &\n  ")}
 
 declare module '#app' {
@@ -6332,7 +6340,7 @@ async function checkForExternalConfigurationFiles() {
     logger.warn(warningMessages[0]);
   } else {
     const warningsAsList = warningMessages.map((message) => `- ${message}`).join("\n");
-    const warning = `Found multiple external configuration files: 
+    const warning = `Found multiple external configuration files:
 
 ${warningsAsList}`;
     logger.warn(warning);
