name: Docker CI

on: [pull_request, push]

jobs:
  docker:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        if: github.event_name != 'pull_request'
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USER_NAME }}" --password-stdin

      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1

      - name: Build "build"
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          IMAGE_ID=${{ github.repository }}

          docker buildx build \
            --cache-from=$IMAGE_ID:cache \
            --cache-to=$IMAGE_ID:cache \
            -t build \
            --target build \
            --load \
            .
          docker container create --name extract build
          docker container cp extract:/srv/app/dist/ .
          docker container rm -f extract

      - name: Build "production"
        run: |
          IMAGE_ID=${{ github.repository }}

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          if [[ "${{ github.event_name }}" == "push" && (${{startsWith(github.ref, 'refs/tags/')}} == "true" || (${{startsWith(github.ref, 'refs/heads/')}} == "true" && ($VERSION == "master" || $VERSION == "develop"))) ]]
          then
            docker buildx build \
              --cache-from=$IMAGE_ID:cache \
              --cache-to=$IMAGE_ID:cache \
              --push \
              -t $IMAGE_ID:$VERSION \
              .
          else
            docker buildx build \
              --cache-from=$IMAGE_ID:cache \
              -t $IMAGE_ID:$VERSION \
              .
          fi

      - name: Zip
        uses: montudor/action-zip@v0.1.0
        if: startsWith(github.ref, 'refs/tags/')
        with:
          args: zip -qq -r ./creal.zip ./dist/

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: creal.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
